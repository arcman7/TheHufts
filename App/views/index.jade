doctype html
html.
  <head>
    <meta charset="utf-8">

    <title>TheHufts</title>
    <meta name="description" content="test page">
    <meta name="viewport" content="width=device-width">
    <link rel="stylesheet" href="/stylesheets/style.css"/>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
    <script type="text/javascript" src="http://www.parsecdn.com/js/parse-1.5.0.min.js"></script>
    <script src="http://code.highcharts.com/stock/highstock.js"></script>
    <script src="http://code.highcharts.com/stock/highcharts-more.js"></script>
    <script src="http://code.highcharts.com/stock/modules/exporting.js"></script>
    <script src="http://requirejs.org/docs/release/2.1.20/comments/require.js"></script>

    <!-- <script type="text/javascript" src="/query.js"></script> -->

    <script type="text/javascript" src="/javascript/keys/parseSecrets.js"></script>

   <!-- <script type="text/javascript" src="/uploadAlgo.js"></script> -->
   <script type="text/javascript" src="/bundle.js"></script>
   <script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/aes.js"></script>

  </head>
  <body>
      <h2> Welcome, Huft <h2>
      <h3> Feel free to begin looking up the stocks you're interested in.</h3>
      <h3 id="upload"> Upload an algorithm </h3>

      <br>
        <div id="stock-form-container">
          <input type="text"   id="stockSymbol" placeholder="stock symbol">
          <input type="submit" class="submit">
        </div>
        <div id="upload-algo-container">
          <input type="file" name="file" id="file-upload">
        </div>
        <div id="uploaded-algos-container">

        </div>
     <div class="graph">
     </div>
     <script>
         var JsonFormatter = {
        stringify: function (cipherParams) {
            // create json object with ciphertext
            var jsonObj = {
                ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64)
            };

            // optionally add iv and salt
            if (cipherParams.iv) {
                jsonObj.iv = cipherParams.iv.toString();
            }
            if (cipherParams.salt) {
                jsonObj.s = cipherParams.salt.toString();
            }

            // stringify json object
            return JSON.stringify(jsonObj);
        },

        parse: function (jsonStr) {
            // parse json string
            var jsonObj = JSON.parse(jsonStr);

            // extract ciphertext from json object, and create cipher params object
            var cipherParams = CryptoJS.lib.CipherParams.create({
                ciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct)
            });

            // optionally extract iv and salt
            if (jsonObj.iv) {
                cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv)
            }
            if (jsonObj.s) {
                cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s)
            }

            return cipherParams;
        }
     };
        var username = "Sir.Badass";
        var password = "biscuits";
        $.ajax({
          url: "http://localhost:3000/gateKeeper/knockKnock",
          type: "get"
        }).done(function(response){
          var key = response;

          //username = CryptoJS.AES.encrypt(username, key)//.toString();
          //password = CryptoJS.AES.encrypt(password, key)//.toString();
          //var decrypted = CryptoJS.AES.decrypt(username,key)//.toString()

          var test = CryptoJS.AES.encrypt(username, key).toString();
          console.log(test," key = " + key);
          var test2 = CryptoJS.AES.decrypt(test, key).toString(CryptoJS.enc.Utf8);
          console.log(test2);
          //var encrypted = CryptoJS.AES.encrypt(username, key, { format: JsonFormatter });
          //console.log(decrypted.toString(CryptoJS.enc.Utf8),username);
          //console.log("json?: " + encrypted);
          //console.log(encrypted);
          $.ajax({
            url: "http://localhost:3000/login/login",
            type: "post",
            data: { encrypted: test, key: key }
          }).done(function(response){ console.log(response); } );
        })
    </script>
  </body>

